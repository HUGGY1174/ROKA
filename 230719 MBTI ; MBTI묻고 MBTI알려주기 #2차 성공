#include <stdio.h>

int main() 
{
    int ei = 50, ns = 50, ft = 50, pj = 50;
    char an, M[2], B[2], T[2], I[2];
    
    
    // MBTI 첫 번째 자리 묻기
    printf("1. 사교적이고 활발한 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ei += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ei -= 10;
    }
    
    
    printf("2. 새로운 사람들과 쉽게 친해지나요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ei += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ei -= 10;
    }
    
    
    printf("3. 계획적이고 조직적인 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        pj += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        pj -= 10;
    }
    
    printf("4. 감정을 표현하는 것보다 내면의 감정을 더 많이 경험하나요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ft += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ft -= 10;
    }
    
    printf("5. 새로운 아이디어와 도전에 열려있는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ns += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ns -= 10;
    }
    
    printf("6. 일을 처리할 때 신중하고 철저하게 하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ft += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ft -= 10;
    }
    
    printf("7. 예기치 않은 상황에 대처하는 데 능숙한 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        pj += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        pj-= 10;
    }
    
    printf("8. 사람들과 함께 시간을 보내는 것보다 혼자 있는 것을 선호하나요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ei += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ei -= 10;
    }
    
    
    printf("9. 논쟁이나 갈등을 피하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ft += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ft -= 10;
    }
    
    printf("10. 새로운 경험을 추구하고 모험적인 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ns += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ns -= 10;
    }
    
    printf("11. 타인의 의견을 고려하고 수용하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ft += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ft -= 10;
    }
    
    printf("12. 미리 계획을 세우는 것보다 즉흥적으로 결정하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        pj += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        pj -= 10;
    }
    
    printf("13. 사람들과 함께 일하는 것을 즐기나요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ei += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ei -= 10;
    }    
    
    printf("14. 일상적인 일들을 꼼꼼히 처리하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        pj += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        pj -= 10;
    }    
    
    printf("15. 강한 감정에 휩쓸리는 편이나 감정을 조절하는 편인가요? ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ft += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ft -= 10;
    }    
    
    printf("16. 변화를 즐기고 새로운 방식으로 시도해보는 것을 좋아하나요?  ( Y / N )");
    an = getchar();
    while (getchar() != '\n');

    if (an == 'Y' || an == 'y') 
    {
        ns += 10;
    }
    else if (an == 'N' || an == 'n')
    {
        ns -= 10;
    }    
    
    
    
    
    // MBTI 첫 번째 자리 알려주기
    if (ei > 50)
    {
        M[0] = 'E';
    }
    else 
    {
        M[0] = 'I';
    }
    
    // MBTI 두 번째 자리 알려주기
    if (ns > 50)
    {
        B[0] = 'N';
    }
    else 
    {
        B[0] = 'S';
    }
    
    // MBTI 세 번째 자리 알려주기
    if (ft > 50)
    {
        T[0] = 'F';
    }
    else 
    {
        T[0] = 'T';
    }

    // MBTI 네 번째 자리 알려주기
    if (pj > 50)
    {
        I[0] = 'P';
    }
    else 
    {
        I[0] = 'J';
    }
    
    M[1] = B[1] = T[1] = I[1] = '\0'; // 배열의 끝을 나타내는 널 종료 문자 추가

    // MBTI 알려주기
    printf("당신의 MBTI는 %c%c%c%c입니다.\n", M[0], B[0], T[0], I[0]);
    
    
    //EI 수치
    if (ei == 0)
    {
        printf("◀◀◀◀◀▷▷▷▷▷\/n");
    }
    
    if (ei == 10)
    {
        printf("◁◀◀◀◀▷▷▷▷▷\n");
    }
    
    if (ei == 20)
    {
        printf("◁◁◀◀◀▷▷▷▷▷\n");
    }
        
    if (ei == 30)
    {
        printf("◁◁◁◀◀▷▷▷▷▷\n");
    }
    
    if (ei == 40)
    {
        printf("◁◁◁◁◀▷▷▷▷▷\n");
    }
    
    if (ei == 50)
    {
        printf("◁◁◁◁◁▷▷▷▷▷\n");
    }
    
    if (ei == 60)
    {
        printf("◁◁◁◁◁▶▷▷▷▷\n");
    }
    
    if (ei == 70)
    {
        printf("◁◁◁◁◁▶▶▷▷▷\n");
    }
    
    if (ei == 80)
    {
        printf("◁◁◁◁◁▶▶▶▷▷\n");
    }
    
    if (ei == 90)
    {
        printf("◁◁◁◁◁▶▶▶▶▷\n");
    }

    if (ei == 100)
    {
        printf("◁◁◁◁◁▶▶▶▶▶\n");
    }
    
    //NS 수치
    if (ns == 0)
    {
        printf("◀◀◀◀◀▷▷▷▷▷\n");
    }
    
    if (ns == 10)
    {
        printf("◁◀◀◀◀▷▷▷▷▷\n");
    }
    
    if (ns == 20)
    {
        printf("◁◁◀◀◀▷▷▷▷▷\n");
    }
        
    if (ns == 30)
    {
        printf("◁◁◁◀◀▷▷▷▷▷\n");
    }
    
    if (ns == 40)
    {
        printf("◁◁◁◁◀▷▷▷▷▷\n");
    }
    
    if (ns == 50)
    {
        printf("◁◁◁◁◁▷▷▷▷▷\n");
    }
    
    if (ns == 60)
    {
        printf("◁◁◁◁◁▶▷▷▷▷\n");
    }
    
    if (ns == 70)
    {
        printf("◁◁◁◁◁▶▶▷▷▷\n");
    }
    
    if (ns == 80)
    {
        printf("◁◁◁◁◁▶▶▶▷▷\n");
    }
    
    if (ns == 90)
    {
        printf("◁◁◁◁◁▶▶▶▶▷\n");
    }

    if (ns == 100)
    {
        printf("◁◁◁◁◁▶▶▶▶▶\n");
    }

    printf("%d%d%d%d ", ei, ns, ft, pj);
    return 0;
}
